procedure _Enter(Sender: TObject);
begin
  if (Sender is TEdit) then
    with TEdit(Sender) do
      if (text = name) then
      begin
        text := '';

        font.color := clBlack;
        font.style := [];
      end else
        if (tag = $01) then
          passwordChar := #0;
end;

procedure _Exit(Sender: TObject);
begin
  if (Sender is TEdit) then
    with TEdit(Sender) do
      if (text = '') then
      begin
        text := name;

        font.color := clGray;
        font.style := [fsItalic];

        if (tag = $01) then
          passwordChar := #0;
      end else
        if (tag = $01) then
          passwordChar := '*';
end;

procedure _Paint(sender: TObject);
begin
  with TForm(sender) do
    with canvas do
    begin
      moveTo(10, (Panels[PANEL_PLAYER].Top - 3));
      lineTo((Width - 10), (Panels[PANEL_PLAYER].Top - 3));
    end;
end;

procedure _DoubleClick(sender: TObject);
begin
  case sender of
    Lists[LIST_PLAYERS]:
      if (TListBox(Sender).ItemIndex <> -1) then
        Forms[FORM_SETTINGS_PLAYER].Visible := true;

    Lists[LIST_PLAYER_SCRIPTS]:
      if (TListBox(Sender).ItemIndex <> -1) then
        Forms[FORM_SCRIPT_SETUP].Visible := true;
  end;
end;

procedure _Click(sender: TObject);
var
  i: integer;
begin
  case sender of
    Lists[LIST_PLAYERS]:
      begin
        i := Lists[LIST_PLAYERS].ItemIndex;

        if (i <> -1) then
        begin
          Labels[LABEL_SCRIPTS].Caption := Lists[LIST_PLAYERS].Items.Strings[i] + '''s Scripts';

          Buttons[BUTTON_ADVANCED_PLAYER].Enabled := true;
          Buttons[BUTTON_SCRIPT_ADD].Enabled := true;
        end else begin
          Lists[LIST_PLAYER_SCRIPTS].Clear();
          Labels[LABEL_SCRIPTS].Caption := 'Player''s Scripts';
        end;
      end;

    Lists[LIST_PLAYER_SCRIPTS]:
      begin
        if (Lists[LIST_PLAYER_SCRIPTS].ItemIndex <> -1) then
        begin
          Buttons[BUTTON_SCRIPT_DELETE].Enabled := true;
          Buttons[BUTTON_SCRIPT_SETTINGS].Enabled := true;
        end;
      end;

    Buttons[BUTTON_ADVANCED_PLAYER]:
      _DoubleClick(Lists[LIST_PLAYERS]);

    Buttons[BUTTON_CONTINUE]:
      begin
        Buttons[BUTTON_PLAYER].Enabled := true;
        Buttons[BUTTON_SETTINGS].Enabled := false;

        Panels[PANEL_MAIN].Visible := false;
        Panels[PANEL_SETTINGS].Visible := true;

        Labels[LABEL_TITLE].caption := 'Global Settings';
      end;

    Buttons[BUTTON_SETTINGS]:
      begin
        Buttons[BUTTON_PLAYER].Enabled := true;
        Buttons[BUTTON_SETTINGS].Enabled := false;

        Panels[PANEL_PLAYER].Visible := false;
        Panels[PANEL_SETTINGS].Visible := true;

        Labels[LABEL_TITLE].caption := 'Global Settings';
      end;

    Buttons[BUTTON_PLAYER]:
      begin
        Buttons[BUTTON_PLAYER].Enabled := false;
        Buttons[BUTTON_SETTINGS].Enabled := true;

        Panels[PANEL_PLAYER].Visible := true;
        Panels[PANEL_SETTINGS].Visible := false;

        Labels[LABEL_TITLE].caption := 'Player Settings';
      end;

    Buttons[BUTTON_PLAYER_CANCEL]:
      Forms[FORM_SETTINGS_PLAYER].Visible := false;

    Buttons[BUTTON_PLAYER_DELETE]:
      begin
        deleteFromList(Lists[LIST_PLAYERS], Lists[LIST_PLAYERS].ItemIndex);

        Buttons[BUTTON_SCRIPT_ADD].Enabled := (Lists[LIST_PLAYERS].Items.Count > 0);
        Buttons[BUTTON_PLAYER_DELETE].Enabled := (Lists[LIST_PLAYERS].Items.Count > 0);
        Buttons[BUTTON_ADVANCED_PLAYER].Enabled := (Lists[LIST_PLAYERS].Items.Count > 0);

        _Click(Lists[LIST_PLAYERS]);
      end;

    Buttons[BUTTON_PLAYER_ADD]:
      begin
        if (Edits[EDIT_USERNAME].Text <> Edits[EDIT_USERNAME].Name) then
        begin
          Lists[LIST_PLAYERS].Items.Add(Edits[EDIT_USERNAME].Text);

          // so it goes back to the "empty" edits; read for next player addition
          Edits[EDIT_USERNAME].Text := '';
          Edits[EDIT_PASSWORD].Text := '';
          Edits[EDIT_PIN].Text      := '';
          _Exit(Edits[EDIT_USERNAME]);
          _Exit(Edits[EDIT_PASSWORD]);
          _Exit(Edits[EDIT_PIN]);

          CheckBoxes[CHECKBOX_ACTIVE].Checked := false;
          CheckBoxes[CHECKBOX_MEMBER].Checked := false;
        end else
          showMessage('You need to enter player information before it can be added');

        Buttons[BUTTON_PLAYER_DELETE].Enabled := true;
      end;

    Buttons[BUTTON_SCRIPT_ADD]:
      Forms[FORM_SCRIPT_LIST].Visible := true;

    Buttons[BUTTON_SCRIPT_DELETE]:
      begin
        deleteFromList(Lists[LIST_PLAYER_SCRIPTS], Lists[LIST_PLAYER_SCRIPTS].ItemIndex);

        Buttons[BUTTON_SCRIPT_DELETE].Enabled := (Lists[LIST_PLAYER_SCRIPTS].Items.Count > 0);
        Buttons[BUTTON_SCRIPT_SETTINGS].Enabled := (Lists[LIST_PLAYER_SCRIPTS].Items.Count > 0);
      end;

    Buttons[BUTTON_SCRIPT_SETTINGS]:
      Forms[FORM_SCRIPT_SETUP].Visible := true;

    Buttons[BUTTON_SCRIPT_LIST_CANCEL]:
      Forms[FORM_SCRIPT_LIST].Visible := false;
  end;
end;
