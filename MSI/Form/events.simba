
(**
 * _Enter and _Exit are used for TEdits. When clicked, TEdit will clear (if
 * nothing has been entered yet); will show password if TEdit is a password
 * field. Text is distinguished using italics and the color grey.
 *)
procedure _Enter(Sender: TObject);
begin
  if (Sender is TEdit) then
    with TEdit(Sender) do
      if (text = name) then
      begin
        text := '';

        font.color := clBlack;
        font.style := [];
      end else
        if (tag = $01) then
          passwordChar := #0;
end;

(**
 * See description for _Enter.
 *)
procedure _Exit(Sender: TObject);
begin
  if (Sender is TEdit) then
    with TEdit(Sender) do
      if (text = '') then
      begin
        text := name;

        font.color := clGray;
        font.style := [fsItalic];

        if (tag = $01) then
          passwordChar := #0;
      end else
        if (tag = $01) then
          passwordChar := '*';
end;

(**
 * Used to paint the line under the titles and panel buttons.
 *)
procedure _Paint(sender: TObject);
begin
  with TForm(sender) do
    with canvas do
    begin
      moveTo(10, (Panels[PANEL_PLAYER].Top - 3));
      lineTo((Width - 10), (Panels[PANEL_PLAYER].Top - 3));
    end;
end;

(**
 * Handles double clicks for all components.
 *)
procedure _DoubleClick(sender: TObject);
begin
  case sender of
    Lists[LIST_PLAYERS]:
      if (TListBox(Sender).ItemIndex <> -1) then
        Forms[FORM_SETTINGS_PLAYER].Visible := true;

    Lists[LIST_PLAYER_SCRIPTS]:
      if (TListBox(Sender).ItemIndex <> -1) then
        Forms[FORM_SCRIPT_SETUP].Visible := true;
  end;
end;

(**
 * Handles left clicks for most components. Some components have specific
 * methods, which are found in the other form include files.
 *)
procedure _Click(sender: TObject);
var
  i: integer;
begin
  case sender of
    MainMenuItems[MENU_FILE][ITEM_NEW]:
      begin
      end;

    MainMenuItems[MENU_FILE][ITEM_LOAD]:
      begin
        if (OpenDialog.Execute) then
        begin
          // Code to load all player information here
          Edits[EDIT_USERNAME].Text := ReadINI('0', 'Test', OpenDialog.FileName);
        end;
      end;

    MainMenuItems[MENU_FILE][ITEM_SAVE]:
      begin
        if (SaveDialog.Execute) then
        begin
          // Code to save all player information here
          writeINI('0', 'Test', Edits[EDIT_USERNAME].Text, SaveDialog.FileName);
        end;
      end;

    MainMenuItems[MENU_FILE][ITEM_SAVE_AS]:
      begin
      end;

    MainMenuItems[MENU_FILE][ITEM_DEFAULT]:
      begin
      end;

    MainMenuItems[MENU_FILE][ITEM_CLOSE]:
      Forms[FORM_MAIN].modalResult := mrOk;

    MainMenuItems[MENU_START][ITEM_RUN]:
      begin
        MSI_Ready := true;
        Forms[FORM_MAIN].modalResult := mrOk;
      end;

    MainMenuItems[MENU_FEEDBACK][ITEM_BUG]:
      openWebPage('http://villavu.com/forum/forumdisplay.php?f=444');

    MainMenuItems[MENU_FEEDBACK][ITEM_SUGGESTION]:
      openWebPage('http://villavu.com/forum/forumdisplay.php?f=445');

    MainMenuItems[MENU_FEEDBACK][ITEM_REPORTS]:
      openWebPage('http://villavu.com/forum/showthread.php?t=56134');

    MainMenuItems[MENU_FEEDBACK][ITEM_CONTRIBUTE]:
      openWebPage('http://villavu.com/forum/showthread.php?t=56179');

    MainMenuItems[MENU_START][ITEM_MAIN]:
      begin
        Panels[PANEL_PLAYER].Visible   := false;
        Panels[PANEL_SETTINGS].Visible := false;
        Panels[PANEL_MAIN].Visible     := true;
      end;

    MainMenuItems[MENU_HELP][ITEM_FORUM]:
      openWebPage('http://villavu.com/forum/index.php');

    MainMenuItems[MENU_HELP][ITEM_HELP]:
      openWebPage('http://villavu.com/forum/showthread.php?t=57723');

    MainMenuItems[MENU_HELP][ITEM_DOC]:
      openWebPage('http://docs.wizzup.org/msi/index.html#');

    MainMenuItems[MENU_HELP][ITEM_ABOUT]:
      openWebPage('http://villavu.com/forum/showthread.php?t=56614');

    Lists[LIST_PLAYERS]:
      begin
        i := Lists[LIST_PLAYERS].ItemIndex;

        if (i <> -1) then
        begin
          Labels[LABEL_SCRIPTS].Caption := Lists[LIST_PLAYERS].Items.Strings[i] + '''s Scripts';

          Buttons[BUTTON_ADVANCED_PLAYER].Enabled := true;
          Buttons[BUTTON_SCRIPT_ADD].Enabled := true;
        end else begin
          Lists[LIST_PLAYER_SCRIPTS].Clear();
          Labels[LABEL_SCRIPTS].Caption := 'Player''s Scripts';
        end;
      end;

    Lists[LIST_PLAYER_SCRIPTS]:
      begin
        if (Lists[LIST_PLAYER_SCRIPTS].ItemIndex <> -1) then
        begin
          Buttons[BUTTON_SCRIPT_DELETE].Enabled := true;
          Buttons[BUTTON_SCRIPT_SETTINGS].Enabled := true;
        end;
      end;

    Buttons[BUTTON_ADVANCED_PLAYER]:
      _DoubleClick(Lists[LIST_PLAYERS]);

    Buttons[BUTTON_CONTINUE]:
      begin
        Buttons[BUTTON_PLAYER].Enabled := true;
        Buttons[BUTTON_SETTINGS].Enabled := false;

        Panels[PANEL_MAIN].Visible := false;
        Panels[PANEL_SETTINGS].Visible := true;

        Labels[LABEL_TITLE].caption := 'Global Settings';
      end;

    Buttons[BUTTON_SETTINGS]:
      begin
        Buttons[BUTTON_PLAYER].Enabled := true;
        Buttons[BUTTON_SETTINGS].Enabled := false;

        Panels[PANEL_PLAYER].Visible := false;
        Panels[PANEL_SETTINGS].Visible := true;

        Labels[LABEL_TITLE].caption := 'Global Settings';
      end;

    Buttons[BUTTON_PLAYER]:
      begin
        Buttons[BUTTON_PLAYER].Enabled := false;
        Buttons[BUTTON_SETTINGS].Enabled := true;

        Panels[PANEL_PLAYER].Visible := true;
        Panels[PANEL_SETTINGS].Visible := false;

        Labels[LABEL_TITLE].caption := 'Player Settings';
      end;

    Buttons[BUTTON_PLAYER_CANCEL]:
      Forms[FORM_SETTINGS_PLAYER].Visible := false;

    Buttons[BUTTON_PLAYER_DELETE]:
      begin
        deleteFromList(Lists[LIST_PLAYERS], Lists[LIST_PLAYERS].ItemIndex);

        Buttons[BUTTON_SCRIPT_ADD].Enabled := (Lists[LIST_PLAYERS].Items.Count > 0);
        Buttons[BUTTON_PLAYER_DELETE].Enabled := (Lists[LIST_PLAYERS].Items.Count > 0);
        Buttons[BUTTON_ADVANCED_PLAYER].Enabled := (Lists[LIST_PLAYERS].Items.Count > 0);

        _Click(Lists[LIST_PLAYERS]);
      end;

    Buttons[BUTTON_PLAYER_ADD]:
      begin
        if (Edits[EDIT_USERNAME].Text <> Edits[EDIT_USERNAME].Name) then
        begin
          Lists[LIST_PLAYERS].Items.Add(Edits[EDIT_USERNAME].Text);
          resetPlayerSettings();
        end else
          showMessage('You need to enter player information before one can be added.');

        Buttons[BUTTON_PLAYER_DELETE].Enabled := true;
      end;

    Buttons[BUTTON_SCRIPT_ADD]:
      Forms[FORM_SCRIPT_LIST].Visible := true;

    Buttons[BUTTON_SCRIPT_DELETE]:
      begin
        deleteFromList(Lists[LIST_PLAYER_SCRIPTS], Lists[LIST_PLAYER_SCRIPTS].ItemIndex);

        Buttons[BUTTON_SCRIPT_DELETE].Enabled := (Lists[LIST_PLAYER_SCRIPTS].Items.Count > 0);
        Buttons[BUTTON_SCRIPT_SETTINGS].Enabled := (Lists[LIST_PLAYER_SCRIPTS].Items.Count > 0);
      end;

    Buttons[BUTTON_SCRIPT_SETTINGS]:
      Forms[FORM_SCRIPT_SETUP].Visible := true;

    Buttons[BUTTON_SCRIPT_LIST_CANCEL]:
      Forms[FORM_SCRIPT_LIST].Visible := false;

    Buttons[BUTTON_STATS_SIGNUP]:
      openWebPage('http://stats.villavu.com/register');
  end;
end;
