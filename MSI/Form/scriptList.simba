var
  SL_Elements: array of TIntegerArray;
  SL_ElementIndexes: TIntegerArray;

procedure SL_SetElements();
var
  i: integer;
begin
  setLength(SL_Elements, SKILL_COUNT);
  setLength(SL_ElementIndexes, SKILL_COUNT);

  for i := 0 to high(MSI_Scripts) do
  begin
    if (MSI_Scripts[i].Name = '') then
      continue;

    with MSI_Scripts[i] do
    begin
      setLength(SL_Elements[skillConst], length(SL_Elements[skillConst]) + 1);
      SL_Elements[skillConst][high(SL_Elements[skillConst])] := constant;
    end;
  end;
end;

procedure SL_ModifyElement(element: integer; expand: boolean);
var
  c, i, j: integer;
begin
  for i := 0 to high(SL_Elements) do
  begin
    if (length(SL_Elements[i]) <= 0) then
      continue;

    if (element = SL_ElementIndexes[i]) then
      with Lists[LIST_ALL_SCRIPTS] do
      begin
        if (expand) then
          Items.Strings[SL_ElementIndexes[i] - 1] := '-   ' + skillToStr(i)
        else
          Items.Strings[SL_ElementIndexes[i] - 1] := '+  ' + skillToStr(i);

        c := 0;

        for j := high(SL_Elements[i]) downto 0 do
        begin
          if (expand) then
            Items.Insert(element, '         ' + capitalize(MSI_Scripts[SL_Elements[i][j]].Name))
          else
            Items.Delete(element);

          inc(c);
        end;

        continue;
      end;

    if (expand) then
      incEx(SL_ElementIndexes[i], c)
    else
      decEx(SL_ElementIndexes[i], c);
  end;
end;

procedure SL_Click(Sender: TObject);
var
  e: integer;
begin
  e := Lists[LIST_ALL_SCRIPTS].ItemIndex;
  if (e = -1) then
    exit;

  if (pos('+', Lists[LIST_ALL_SCRIPTS].Items.Strings[e]) > 0) then
    SL_ModifyElement(e + 1, true)
  else
    if (pos('-', Lists[LIST_ALL_SCRIPTS].Items.Strings[e]) > 0) then
      SL_ModifyElement(e + 1, false);

  Buttons[BUTTON_SCRIPT_LIST_ADD].Enabled := true;
end;

procedure SL_DoubleClick(Sender: TObject);
var
  e: integer;
begin
  e := Lists[LIST_ALL_SCRIPTS].ItemIndex;
  if (e = -1) then
    exit;

  // if one of the expandable options (i.e. skill titles)
  if (pos('+', Lists[LIST_ALL_SCRIPTS].Items.Strings[e]) = 1) or
     (pos('-', Lists[LIST_ALL_SCRIPTS].Items.Strings[e]) = 1) then
  begin
    showMessage('Invalid selection');
    exit;
  end;

  // add the splected script to the player's script list
  if (not inList(Lists[LIST_PLAYER_SCRIPTS], removePreSpaces(Lists[LIST_ALL_SCRIPTS].Items.Strings[e]))) then
    Lists[LIST_PLAYER_SCRIPTS].Items.Add(
      removePreSpaces(Lists[LIST_ALL_SCRIPTS].Items.Strings[e])
    );

  Forms[FORM_SCRIPT_LIST].Visible := false;
end;
