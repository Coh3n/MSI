(*
RunMe
=====

The RunMe file is the file that the user will actually run.

The source for RunMe.simba can be found
`here <https://github.com/SRL/MSI/raw/master/RunMe.simba>`_, and a very detailed
guide on how to properly setup MSI can be found here
`here <http://villavu.com/forum/showthread.php?p=745942#post745942>`_.

*)

program MSI_Script;
{$DEFINE SMART}
{$i MSI/lib/core/setup.simba}

(*
DeclareSettings
~~~~~~~~~~~~~~~

.. code-block:: pascal

  procedure DeclareSettings();

Sets the global variable 'MSI_Settings.' Can be easily expandable to any type
of setting requested by any user.

*)
procedure DeclareSettings();
begin
  MSI_Settings[SETUP_DEBUG_SMART]   := True;    // Debugs things onto SMART (may cause lag)
  MSI_Settings[SETUP_SAVE_DEBUG]    := True;    // Save's the debug box text to a file
  MSI_Settings[SETUP_SAVE_REPORT]   := True;    // Save's the progress report to a file
  MSI_Settings[SETUP_HUMAN_BREAK]   := True;    // Take more human like breaks
  MSI_Settings[SETUP_SWITCH_WORLDS] := True;    // Switch worlds when switching players or after breaks
  MSI_Settings[SETUP_PRINT_REPORT]  := True;    // Will only print the short report in the debug box (will still save long report to file)
  MSI_Settings[SETUP_BREAK_TIME]    := 15;      // Single player only - how long to break for (in minutes)
  MSI_Settings[SETUP_DEBUG_LEVEL]   := 10;      // The lower the number, the less the script will debug
  MSI_Settings[SETUP_ANTIBAN_WAIT]  := 15000;   // Minimum time to wait between antibans (in milliseconds 1000ms = 1s)
  MSI_Settings[SETUP_RANDOMS_WAIT]  := 10000;   // Minimum time to wait between randoms checks
  MSI_Settings[SETUP_STATS_ID]      := '';      // Stats ID
  MSI_Settings[SETUP_STATS_PASS]    := '';      // Stats password
  MSI_Settings[SETUP_QC_LEVELUP]    := True;    // Quick chat when you level up, only available when your level is above 20
  MSI_Settings[SETUP_MAX_PLAYERS]   := 30;      // How many players around you before switching worlds
  MSI_Settings[SETUP_RANDOM_NP]     := True;    // Choose a random player when switching players?
end;

(*
DeclarePlayers
~~~~~~~~~~~~~~

.. code-block:: pascal

  procedure DeclarePlayers();

When called, sets the global variable 'MSI_Players.'  This is the procedure
the user needs to setup if they elect not to use the player form.

*)
procedure DeclarePlayers();
var
  i: Integer;
begin
  numberOfPlayers := 1;
  setLength(players, numberOfPlayers);

  with players[0] do
  begin
    loginName := '';   // email/name used to login
    displayName := ''; // in-game display name (optional)
    password := '';
    bankPin := '';     // bank pin (optional if not using a banking script)
    active := true;    // use this player?
    member := false;   // is this player a member?
    integers[0] := 60; // how many minutes to run this player for
    booleans[0] := true; // take breaks?
  end;
end;

var
  i: integer;
begin
  // set the script start date and time used to progress reports and logs
  ScriptStart := TheDate(DATE_DAY) + ' at ' + TheTime;
  ScriptStart := Replace(scriptStart, ':', ' ');

  ClearDebug;
  MSI_Setup;
  DeclareSettings;
  DeclarePlayers;

  SetupSRL;
  ActivateClient;
  CurrDebugLevel := 1;
  MSI_InitSRLPlayers();
  SetScriptProp(SP_WriteTimeStamp, [True]);
  AddOnTerminate('MSI_ScriptTerminate');

  {$IFDEF SMART}
  SMART_ClearCanvas();
  {$ENDIF}

  // create debug file
  if (MSI_Settings[SETUP_SAVE_DEBUG]) then
    DebugFile := CreateFile(PATH_DEBUG + ScriptStart + '.txt');

  SetupSRLStats(21, MSI_Settings[SETUP_STATS_ID], MSI_Settings[SETUP_STATS_PASS]);

  MSI_Mainloop;
end.

